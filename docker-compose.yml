# version: '3.8' #kaldır modası geçmiş

services:
  postgres:
    container_name: postgres
    image: postgres:16.1-alpine3.18
    restart: always
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval:  5s
      timeout:  5s
      retries:  5

  backend:
    container_name: backend
    build: ./backend
    networks:
      - backend_network
      - frontend_network

    volumes:
      - ./backend:/app
      - media_volume:/app/media
      - static_volume:/app/static
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    build: ./frontend
    networks:
      - frontend_network
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
    ports:
      - "443:443"
    depends_on:
      - backend
networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge

volumes:
  postgres_data:
  media_volume:
  static_volume:

  # nginx:
  #   container_name: nginx
  #   image: nginx:alpine
  #   networks:
  #     - frontend_network
  #     - backend_network
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./nginx:/etc/nginx/conf.d:ro # Nginx konfigürasyon dosyalarını kopyalayın
  #     - ./certs:/etc/ssl/certs:ro # SSL sertifikalarını kopyalayın
  #     - ./certs:/etc/ssl/private:ro # SSL anahtar dosyasını kopyalayın
  #   depends_on:
  #     - frontend



# networks:
#   my-pre-existing-network:
#     external: true
